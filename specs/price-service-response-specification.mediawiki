<pre>
 Title: Price Service Response Specification
 Author: Phil McLean <phil@blockstream.com>
 Status: Active
 Created: 2023-04-20
 License: BSD-2-Clause
          GNU-All-Permissive
</pre>

==Introduction==

===Abstract===
This document proposes a standard for a price oracle. The price service or price oracle is a web service that provides a signed message attesting to the price of Bitcoin at a given time in a specified fiat currency.

===Motivation===
Covenants and Contracts require a reference asset price. The price service provides a signed price timestamp that can be used directly in Script. To allow for future variations of the pricing message format, a prefix code is embedded at the front of each pricing message.

==Description==

The price service provides a JSON document containing a timestamp, a price, a price message encoding the timestamp, price, and currency, and a signature of the price message. The signature is a Schnorr signature of a tagged hash of the message, as described in BIP-340 [1].

The price service response contains all data necessary to verify the price message and its signature.

Key management is outside the scope of this document.

===Price Service Response===

In response to an HTTP GET request, the price service responds with a JSON response body with the following format:

<code>
{
  "timestamp": "<Unix Epoch Time in Microseconds of price time>",
  "lastPrice": "<Price>",
  "attestation": {
	"signature": "<hex encoded 64 byte signature of tagged message hash>",
      "publicKey": "<hex encoded 32 byte public key of price service>",
	  "message": "<hex encoded price message, see below>",
	  "messageHash": "<hex encoded tagged message hash>",
      "messageTag": "<tag used for message hash>"
  },
  "disclaimer: "<legal disclaimer intended for human readers, with URL>"
}
</code>

The `timestamp` and `lastPrice` fields are intended as human-readable forms of the fields encoded in the `message`.

===Price Message===

The price message is variable length and format.
The first four bytes of the message are an ASCII string that defines its format; currently the only defined format is “le64”.

“le64” messages are 23 bytes long and consist of the following fields in order:

{| class="wikitable" style="margin:auto"
! Header Field !! Header Value !! Header Length (bytes)
|-
| 4 byte prefix code || ASCII encoding of string "le64" || 4
|-
| 3 byte currency code || ASCII encoding of fiat currency code ISO 4217 code e.g. "USD" || 3
|-
| 64 bit timestamp || little-endian 64 bit unsigned integer of unix epoch time in microseconds || 8
|-
| 64 bit price || little-endian 64 bit unsigned integer of price in cents || 8
|}


Note that the "le64" format only defines conversions from Bitcoin to fiat currencies. It does not support cryptocurrencies other than Bitcoin, and does not support the inverted trading pair, which may require a finer precision than cents.

===Example Price Message===

Suppose 1 Bitcoin could be sold for $17,542.61 USD on 11:33:01 AM PST on Jan 10, 2023.

The prefix “le64” is “6c653634” as a hex string.

The epoch timestamp in microseconds for that date and time is 1673379181000000, or 0x5f1edf3a87540.

The price in USD cents of 1 bitcoin was 1754261, or 0x1ac495.

The currency code “USD” is “555344” as a hex string.

Thus, the price message hex-encoded string is 6c6536345553444075a8f3edf1050095c41a0000000000

===Signature===

The price message is signed using a Schnorr signature over the tagged message hash, as described in BIP-340. The tag should be defined for the instance of the price service, and is used to prevent the reuse of the signature in a different context.

The tagged hash of a message x is computed as

<code>
tagged_hash(x) = SHA256( SHA256(tag) || SHA256(tag) || x)
</code>

where x is the price message, and tag is a short ascii string unique to the instance of the price oracle, and || is concatenation.


===API Authentication===
API Authentication is outside the scope of this document.

===Price Service Frequency===

The frequency and and timeliness of the pricing information is outside the scope of this document.

==References==

# BIP-340 https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki
# ISO 417 currency codes https://www.iso.org/iso-4217-currency-codes.html
